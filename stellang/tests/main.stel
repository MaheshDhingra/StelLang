# Test all built-in functions in StelLang
print("Testing abs:", abs(-5), abs(-3.2))
print("Testing all:", all([1, 2, 3]), all([0, 1]))
print("Testing any:", any([0, 0, 1]), any([0, 0, 0]))
print("Testing ascii:", ascii("hÃ©llo"))
print("Testing bin:", bin(10))
print("Testing bool:", bool(0), bool(1), bool([]), bool([1]))
print("Testing bytearray:", bytearray([65, 66, 67]))
print("Testing bytes:", bytes([65, 66, 67]))
print("Testing callable:", callable(print), callable(123))
print("Testing chr:", chr(65))
print("Testing complex:", complex(1, 2))
print("Testing dict:", dict([["a", 1], ["b", 2]]))
print("Testing dir:", dir({"a": 1}))
print("Testing divmod:", divmod(7, 3))
print("Testing enumerate:", enumerate(["a", "b"]))
print("Testing filter:", filter([1, 2, 3], fn x => x > 1))
print("Testing float:", float(5), float("3.14"))
print("Testing format:", format("Hello {}", ["World"]))
print("Testing frozenset:", frozenset([1, 2, 2, 3]))
print("Testing getattr:", getattr({"a": 1}, "a"))
print("Testing hasattr:", hasattr({"a": 1}, "a"))
print("Testing hash:", hash(123))
print("Testing hex:", hex(255))
print("Testing id:", id(123))
# input() is interactive, skip
print("Testing int:", int(3.7), int("42"))
print("Testing isinstance:", isinstance(1, "integer"))
print("Testing iter:", iter([1, 2, 3]))
print("Testing len:", len([1, 2, 3]), len("abc"))
print("Testing list:", list("abc"))
print("Testing map:", map([1, 2, 3], fn x => x * 2))
print("Testing max:", max(1, 2))
print("Testing min:", min(1, 2))
print("Testing next:", next([1, 2, 3]))
print("Testing object:", object())
print("Testing oct:", oct(8))
print("Testing ord:", ord("A"))
print("Testing pow:", pow(2, 3))
print("Testing range:", range(1, 4))
print("Testing repr:", repr(123))
print("Testing reversed:", reversed([1, 2, 3]))
print("Testing round:", round(3.6))
print("Testing set:", set([1, 2, 2, 3]))
print("Testing slice:", slice([1, 2, 3, 4], 1, 3))
print("Testing sorted:", sorted([3, 1, 2]))
print("Testing str:", str(123))
print("Testing sum:", sum([1, 2, 3]))
print("Testing tuple:", tuple([1, 2, 3]))
print("Testing type:", type(123))
print("Testing vars:", vars())
# Test bytes/bytearray methods
print("Testing bytes.upper:", bytes([97, 98, 99]).upper())
print("Testing bytes.lower:", bytes([65, 66, 67]).lower())
print("Testing bytes.isalpha:", bytes([65, 66, 67]).isalpha())
print("Testing bytes.isdigit:", bytes([49, 50, 51]).isdigit())
print("Testing bytes.isspace:", bytes([32, 32]).isspace())
print("Testing bytes.zfill:", bytes([52, 50]).zfill(5))
print("Testing bytearray.swapcase:", bytearray([65, 98, 67]).swapcase())
print("Testing bytearray.splitlines:", bytearray([97, 10, 98, 10]).splitlines())